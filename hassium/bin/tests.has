import Point from point;

class MyClass {
    fib_num = 12;
    func fib(n: number) {
        if (n == 0) return n;
        if (n == 1) return n;
        return MyClass.fib (n - 2) + MyClass.fib (n - 1);
    }
}

func main () {
    arr = [1, 2, 3];
    arr2 = arr.map(fn (n: number) n + 1);
    foreach (i in arr2) {
        println(i);
    }
    obj = {
        arr,
        num: 5,
        "str": "s",
    };

    foreach (i in arr) {
        println (i);
    }

    println (obj.arr [2]);
    obj.num += 2;
    println (obj.num);
    println (10.5);
    println (add (10, 20, obj.num));
    println (void ());

    anon = fn (x: number, y: number) {
        return x + y + obj.num;
    };

    println (anon (40, 2));

    func anon2 (x: number) {
        return x * anon (x, obj.num);
    }

    println (anon2 (10));

    arr.push ('pushed');
    println (arr.peek ());
    println (arr.pop ());
    println (arr.pop ());

    println (typeof (2));
    println (typeof (2) == number);

    a = [1, 2, 4];
    a [0] = 2;
    a [5] = 5;
    foreach (z in a) {
        println (z);
    }

    p1 = Point (2, 4);
    p2 = Point (10, 12);
    p1.addX (3);
    p2.addY (4);

    p1.print ();
    p2.print ();



    p3 = p1 + p2;
    p3.print();
}

println (MyClass.fib (MyClass.fib_num));

func add (x: any, y: any, z: any): any {
    return x + y + z;
}

func void () {
    
}

main();